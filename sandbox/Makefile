# Compiler to use
CXX = g++

# Compiler flags:
# -Wall: enable all warnings
# -g: include debug symbols for GDB
# -MMD: generate .d dependency files for each .o
# -MP: add phony rules to avoid errors if a header is deleted
CXXFLAGS = -Wall -g -MMD -MP

# Source file(s)
SRC = main.cpp

# Object file(s) — replace .cpp with .o (e.g., main.o)
OBJ = $(SRC:.cpp=.o)

# Dependency file(s) — replace .o with .d (e.g., main.d)
# These are auto-generated by the compiler with -MMD
DEPS = $(OBJ:.o=.d)

# Name of the final executable
TARGET = app

# Default target: build the executable
all: $(TARGET)

# How to link object files into the executable
# $@ = the target (i.e., app)
# $^ = all prerequisites (i.e., the .o files)
$(TARGET): $(OBJ)
	$(CXX) $(CXXFLAGS) -o $@ $^

# Compile each .cpp into a .o and generate .d dependency file
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Include dependency files (.d), if they exist
# The leading '-' suppresses errors if they don't exist yet
-include $(DEPS)

purge:
	rm -f $(OBJ) $(DEPS)

# Clean target: remove generated files
clean:
	rm -f $(TARGET) $(OBJ) $(DEPS)
